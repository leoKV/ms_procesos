# -*- mode: python ; coding: utf-8 -*-

import os

# Obtener dependencias de requirements.txt
def get_hidden_imports():
    hidden_imports = []
    try:
        with open('requirements.txt', 'r') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#'):
                    # Extraer nombre del paquete (antes de == o >=)
                    package_name = line.split('==')[0].split('>=')[0].split('<=')[0].strip()
                    hidden_imports.append(package_name)
    except:
        pass
    return hidden_imports

a = Analysis(
    ['main.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('config.json', '.'),
        ('.env', '.'),
        ('kia.ico', '.'),
        ('requirements.txt', '.'),
        ('utilidades_config.py', '.'),
        ('credentials/credentials.json', 'credentials/'),
        ('resources/render_kfn.ahk', 'resources/'),
        ('resources/resources.zip', 'resources/'),
        ('procesos', 'procesos'),
        ('ms_procesos', 'ms_procesos'),
        ('C:\\Users\\lopez\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\demucs\\remote\\files.txt', 'demucs\\remote'),
        ('C:\\Users\\lopez\\.cache\\torch\\hub\\checkpoints\\*.th', 'torch\\hub\\checkpoints'),

    ],
    hiddenimports=get_hidden_imports() + [
        'tkinter',
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        'procesos',
        'procesos.management',
        'procesos.management.commands',
        'procesos.management.commands.process_listener',
        'procesos.utils',
        'procesos.utils.path_validator',
        'procesos.utils.logs',
        'procesos.utils.print',
        'procesos.utils.ffmpeg_installer',
        'procesos.services',
        'procesos.services.maquina_info_service',
        'procesos.services.proceso_factory',
        'procesos.repositories',
        'procesos.repositories.cancion_repository',
        'procesos.repositories.proceso_repository',
        'procesos.models',
        'ms_procesos.config',
        'concurrent.futures',
        'psycopg',
        'psycopg-binary',
        'torch',
        'torchaudio',
        'torchvision',
        'demucs',
        'openunmix',
        'julius',
        'lameenc',
        'einops',
        'treetable',
        'submitit',
        'dora_search',
        'cloudpickle',
        'omegaconf',
        'sympy',
        'networkx',
        'retrying',
        'pystray',
        'yt_dlp',
        'waitress',
        'colorama',
        'filelock',
        'fsspec',
        'google.auth',
        'google.oauth2',
        'googleapiclient',
        'googleapiclient.discovery',
        'googleapiclient.errors',
        'googleapiclient.http',
        'google_auth_oauthlib',
        'google_auth_oauthlib.flow',
        'requests-oauthlib',
        'oauthlib',
        'urllib3',
        'certifi',
        'idna',
        'requests',
        'httplib2',
        'pyasn1',
        'pyasn1_modules',
        'rsa',
        'six',
        'protobuf',
        'google-api-core',
        'packaging',
        'setuptools',
        'pip',
        'distutils',
        'distutils.util',
        'distutils.cmd',
        'distutils.command',
        'distutils.core',
        'distutils.dir_util',
        'distutils.file_util',
        'distutils.spawn',
        'distutils.sysconfig',
        'distutils.version',
        'distutils.command.build_ext',
        'distutils.command.build_py',
        'distutils.command.clean',
        'distutils.command.config',
        'distutils.command.install',
        'distutils.command.install_data',
        'distutils.command.install_headers',
        'distutils.command.install_lib',
        'distutils.command.install_scripts',
        'distutils.command.sdist',
        'numpy',
        'PIL',
        'PIL.Image',
        'PIL.ImageDraw',
        'PIL.ImageFont',
        'PIL.ImageTk',
        'psutil',
        'antlr4',
        'antlr4-python3-runtime',
        'cachetools',
        'Jinja2',
        'MarkupSafe',
        'PyYAML',
        'pyparsing',
        'typing_extensions',
        'tzdata',
        'django.core.management.sql',
        'django.db.backends.postgresql',
        'django.conf.global_settings'
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    noarchive=False,
    optimize=0,
)
pyz = PYZ(a.pure)

exe = EXE(
    pyz,
    a.scripts,
    [],
    exclude_binaries=True,
    name='ms_procesos',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon='kia.ico',
)
coll = COLLECT(
    exe,
    a.binaries,
    a.datas,
    strip=False,
    upx=True,
    upx_exclude=[],
    name='ms_procesos',
)
